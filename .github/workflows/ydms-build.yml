name: 'ydms-build'

on:
  workflow_run:
    workflows: ['release']
    types: [completed]

permissions:
  contents: read
  actions: read

jobs:
  package-and-push:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      PACKAGE_ID: SDL3.ReleaseArtifacts
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: 'Download artifacts from triggering run'
        run: |
          mkdir -p artifacts
          gh run download ${{ github.event.workflow_run.id }} -R ${{ github.repository }} -D artifacts
          echo 'Downloaded artifacts:'
          ls -R artifacts || true

      - name: 'Set up .NET SDK'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: 'Install NuGet CLI'
        run: |
          dotnet tool install --global NuGet.CommandLine
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: 'Detect version from source artifact names'
        id: ver
        shell: bash
        run: |
          set -euo pipefail
          version=""
          if compgen -G "artifacts/sources/*" > /dev/null; then
            version=$(ls artifacts/sources/* 2>/dev/null | grep -Eo '[0-9]+(\.[0-9]+){1,3}([.-][A-Za-z0-9]+(\.[A-Za-z0-9]+)*)?' | head -n1 || true)
          fi
          if [ -z "$version" ]; then
            version="0.0.0-ci.${{ github.event.workflow_run.run_number }}"
          fi
          echo "Resolved NuGet version: $version"
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: 'Create package layout'
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p package/content

          if [ -d artifacts ]; then
            cp -R artifacts/* package/content/ || true
          fi

          cat > package/README.md << 'README_EOF'
          SDL YDMS Release Artifacts
          README_EOF

          cat > package/SDL.ReleaseArtifacts.nuspec << NUSPEC_EOF
          <?xml version="1.0"?>
          <package>
            <metadata>
              <id>${{ env.PACKAGE_ID }}</id>
              <version>${{ steps.ver.outputs.version }}</version>
              <authors>SDL</authors>
              <owners>SDL</owners>
              <license type="expression">Zlib</license>
              <projectUrl>https://github.com/${{ github.repository }}</projectUrl>
              <repository type="git" url="https://github.com/${{ github.repository }}.git"/>
              <description>Bundled release artifacts from the SDL CI release workflow (sources, prebuilt binaries, and SDKs).</description>
              <requireLicenseAcceptance>false</requireLicenseAcceptance>
              <readme>README.md</readme>
            </metadata>
            <files>
              <file src="README.md" target="" />
              <file src="content/**" target="content" />
            </files>
          </package>
          NUSPEC_EOF

      - name: 'Pack NuGet package'
        run: |
          nuget pack package/SDL.ReleaseArtifacts.nuspec -NoDefaultExcludes -OutputDirectory out
          echo "Produced packages:"
          ls -al out

      - name: 'Push to nuget.org'
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet nuget push out/*.nupkg --source https://api.nuget.org/v3/index.json --api-key "${{ secrets.NUGET_TOKEN }}" --skip-duplicate
