name: YDMS Release Builds

on:
  release:
    types:
      - published
  push:

jobs:
  build-linux:
    strategy:
      matrix:
        osver: [ubuntu-latest, ubuntu-24.04-arm]

    runs-on: ${{ matrix.osver }}

    steps:
      - uses: actions/checkout@v4

      - name: Set dist name
        run: |
          if ${{ matrix.osver == 'ubuntu-24.04-arm' }}; then
            echo "distname=crunch-linux-arm" >> "$GITHUB_ENV"
          else
            echo "distname=crunch-linux" >> "$GITHUB_ENV"
          fi

      - name: Create build dirs
        run: |
          mkdir build
          cd build
          echo "builddir=$(pwd)" >> "$GITHUB_ENV"

      - name: 'Install Linux dependencies'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            gnome-desktop-testing libasound2-dev libpulse-dev libaudio-dev libjack-dev libsndio-dev \
            libusb-1.0-0-dev libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev \
            libxss-dev libwayland-dev libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev \
            libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev fcitx-libs-dev

      - name: Build SDL
        working-directory: ${{ env.builddir }}
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make -j4

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.distname }}
          path: ${{ env.builddir }}/**/*.so

  build-win:
    runs-on: windows-2025

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - uses: actions/checkout@v4

      - name: 'Build archives'
        run: |
          mkdir dist
          python build-scripts/build-release.py `
            --actions msvc `
            --commit ${{ github.sha }} `
            --root "${{ github.workspace }}/dist" `
            --github `
            --debug

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: '${{ github.workspace }}/dist'
